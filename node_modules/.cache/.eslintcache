[{"/Users/sambaran/Desktop/React/memegenerator/src/index.js":"1","/Users/sambaran/Desktop/React/memegenerator/src/App.js":"2","/Users/sambaran/Desktop/React/memegenerator/src/components/Header.jsx":"3","/Users/sambaran/Desktop/React/memegenerator/src/components/Meme.jsx":"4","/Users/sambaran/Desktop/React/memegenerator/src/memesData.js":"5"},{"size":168,"mtime":1648053469291,"results":"6","hashOfConfig":"7"},{"size":236,"mtime":1648053611211,"results":"8","hashOfConfig":"7"},{"size":385,"mtime":1648061899577,"results":"9","hashOfConfig":"7"},{"size":2124,"mtime":1648056451596,"results":"10","hashOfConfig":"7"},{"size":26069,"mtime":1648053221415,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"cdgnt8",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/sambaran/Desktop/React/memegenerator/src/index.js",[],[],["29","30"],"/Users/sambaran/Desktop/React/memegenerator/src/App.js",[],[],"/Users/sambaran/Desktop/React/memegenerator/src/components/Header.jsx",["31"],[],"/Users/sambaran/Desktop/React/memegenerator/src/components/Meme.jsx",["32"],[],"import React from \"react\"\n\nexport default function Meme() {\n    \n    const [meme, setMeme] = React.useState({\n        topText: \"\",\n        bottomText: \"\",\n        randomImage: \"http://i.imgflip.com/1bij.jpg\" \n    })\n    const [allMemes, setAllMemes] = React.useState([])\n    \n    React.useEffect(() => {\n        fetch(\"https://api.imgflip.com/get_memes\")\n        .then(res => res.json())\n        .then(data => setAllMemes(data.data.memes))\n    }, [])\n\n\n    function changeHandler(event) {\n        const {name, value} = event.target\n        setMeme(prevMemeData => ({\n            ...prevMemeData,\n            [name] : value\n        }))\n    }\n    function getMemeImage() {\n        const memesArray = allMemes\n        const randomNumber = Math.floor(Math.random() * memesArray.length)\n        const url = memesArray[randomNumber].url\n        setMeme(prevMeme => ({\n            topText: \"\",\n            bottomText: \"\",\n            randomImage: url\n        }))\n        \n    }\n    \n    return (\n        <main>\n            <div className=\"form\">\n                <input \n                    name=\"topText\"\n                    type=\"text\"\n                    value={meme.topText}\n                    onChange={changeHandler}\n                    placeholder=\"Top text\"\n                    className=\"form--input\"\n                />\n                <input \n                    name=\"bottomText\"\n                    type=\"text\"\n                    value={meme.bottomText}\n                    onChange={changeHandler}\n                    placeholder=\"Bottom text\"\n                    className=\"form--input\"\n                />\n                <button \n                    className=\"form--button\"\n                    onClick={getMemeImage}\n                >\n                    Get a new meme image ðŸ–¼\n                </button>\n            </div>\n            <div className=\"meme\">\n                <img src={meme.randomImage} className=\"meme--image\" />\n                <h2 className=\"meme--text top\">{meme.topText}</h2>\n                <h2 className=\"meme--text bottom\">{meme.bottomText}</h2>\n            </div>\n        </main>\n    )\n}","/Users/sambaran/Desktop/React/memegenerator/src/memesData.js",["33"],[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":6,"column":13,"nodeType":"40","endLine":9,"endColumn":15},{"ruleId":"38","severity":1,"message":"39","line":65,"column":17,"nodeType":"40","endLine":65,"endColumn":71},{"ruleId":"41","severity":1,"message":"42","line":1,"column":1,"nodeType":"43","endLine":807,"endColumn":2},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]